pseudocode

// functions

* purge_string (string)
  for i in string
    if is_letter(string[i])==true
      str2[j] = string[i]
      j++
  return str2

to_lower(character)
  if character >= 65 AND character <=96
    b = (a+32)
  else
    b = a
  return b

is_letter(character)
  if character >= 65 AND character <= 90
    return true
  else if character >= 95 AND character <= 122
    return true
  else
    return false

is_palindrome(*string)
  string2 = reverse(string)
  if string2 == string1
    return true
  else
    return false

inputintrange(&inputvar, lowerbound, upperbound)
  get_int(inputvar)
  while repeat == 1
    if inputvar > upperbound OR inputvar < lower_bound
      print "Bad input, try again: "
      get_int(inputvar)
    else
      repeat == 0

wordsfreq(string)
  tokenize each "word" in provided string, purge each one of them
  count each time a given word appears

givenfreq(string, words)
  tokenize each "word" in provided string, purge them, compare
  each word against the purged and tokenized list of words to compare against
  and count each time one of them shows up.

// body

while repeat == 1
  print "Gimme a string to work with here: "
  userstring = get user string < 8192 bits

  print "Choose an option (1-3):"
  print "(1) Palindrome Detector"
  print "(2) Frequency of all words"
  print "(3) Frequency of given word(s)"

  inputrange(option, 1, 3)
  if option == 1
    print is_palindrome(userstring)
  else if option == 2
    print wordsfreq(userstring)
  else if option == 3
    print givenfreq(userstring)
  else
    print "how did you manage this?"

  print "Choose again? (0-no, 1-yes)"
  inputrange(repeat, 0, 1)



  /************* EXTRA CREDIT OPTION *************

    cout << "Filename: ";
    get_string(filename);
    file.open(filename);

    if (!file.is_open()) {
      while(!file.is_open()){
        cout << "Incorrect file name\nFile name: ";
        get_string(filename);
        file.open(filename);
      }
    }

    file.close();

  ************* END EXTRA CREDIT OPTION *************/
